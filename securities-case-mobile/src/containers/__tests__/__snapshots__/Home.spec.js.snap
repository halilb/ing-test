// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`displays latest price fetch time correctly if it is older than 10 seconds 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 24,
      "paddingTop": 8,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Object {
        "marginBottom": 8,
        "textAlign": "center",
      }
    }
  >
    Prices fetched 11 seconds ago
  </Text>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onViewableItemsChanged={undefined}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#ffffff",
        "borderRadius": 2,
        "borderWidth": 1,
        "padding": 8,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.71,
        "shadowRadius": 2,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;

exports[`renders a Home container correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "padding": 24,
      "paddingTop": 8,
    }
  }
>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
    style={
      Object {
        "marginBottom": 8,
        "textAlign": "center",
      }
    }
  >
    Prices are up to date!
  </Text>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    numColumns={1}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onViewableItemsChanged={undefined}
    renderItem={[Function]}
    renderScrollComponent={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "borderColor": "#ffffff",
        "borderRadius": 2,
        "borderWidth": 1,
        "padding": 8,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 1,
          "width": 0,
        },
        "shadowOpacity": 0.71,
        "shadowRadius": 2,
      }
    }
    updateCellsBatchingPeriod={50}
    windowSize={21}
  >
    <View />
  </RCTScrollView>
</View>
`;
